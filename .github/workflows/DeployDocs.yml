name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - gh-pages

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "gh-pages"
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Write `siteinfo.js` files
        run: |
          for dir in */; do
            if [ -f "${dir}_version.txt" ]; then
              version=$(<"${dir}_version.txt")
              echo "var DOCUMENTER_CURRENT_VERSION = \"$version\";" > "${dir}siteinfo.js"
              echo "Generated siteinfo.js for ${dir} with version ${version}"
            fi
          done
      - name: Write `versions.js` file
        run: |
            # Collect all top-level folders matching the required patterns
            versions=$(ls -d */ | grep -E '^(dev|stable|v[0-9]+(\.[0-9]+){0,2})/?$' | sed 's:/$::')

            # Sort versions: stable first, then by semantic versioning, and finally dev
            sorted_versions=$(echo "$versions" | grep -v 'dev' | sort -rV)
            sorted_versions="stable"$'\n'"$sorted_versions"$'\n'"dev"

            # Determine the newest version with patch version
            newest_version=$(echo "$sorted_versions" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

            # Log the variables for debugging
            echo "Collected versions:"
            echo "$versions"
            echo "Sorted versions:"
            echo "$sorted_versions"
            echo "Newest version:"
            echo "$newest_version"

            # Write the `versions.js` file
            echo "var DOC_VERSIONS = [" > versions.js
            echo "$sorted_versions" | sed 's/^/  "/;s/$/",/' >> versions.js
            echo "];" >> versions.js
            echo "var DOCUMENTER_NEWEST = \"$newest_version\";" >> versions.js
            echo "var DOCUMENTER_STABLE = \"stable\";" >> versions.js

            echo "Generated versions.js with DOCUMENTER_NEWEST=$newest_version and DOCUMENTER_STABLE=stable"
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4